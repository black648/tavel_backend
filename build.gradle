plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

	//kotlin
	id 'org.jetbrains.kotlin.jvm' version '1.8.0'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.0'
	id 'org.jetbrains.kotlin.kapt' version '1.8.0'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	kapt("com.querydsl:querydsl-apt:5.0.0:jakarta")
	kapt("jakarta.annotation:jakarta.annotation-api")
	kapt("jakarta.persistence:jakarta.persistence-api")
//	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//	Lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

	// DB
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

//QClass 생성 위치 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

//java Source Set 에 QClass 위치 추가
sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
